name: Deploy Admin Panel to VPC

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/deploy.yml'
      - 'infrastructure/**'
      - 'lambda/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.5.0'
        
    - name: Install React dependencies
      run: npm ci
      
    - name: Install Lambda dependencies
      run: |
        cd lambda
        npm ci
        

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Deploy infrastructure
      run: |
        cd infrastructure
        terraform init -backend-config="bucket=noman-rocket-zulfiqar-terraform-backend-us-east-1" \
                       -backend-config="key=cognito-admin-panel/terraform.tfstate" \
                       -backend-config="region=us-east-1" \
                       -backend-config="dynamodb_table=noman-rocket-zulfiqar-terraform-backend-us-east-1.lock" \
                       -backend-config="encrypt=true"
        
        echo "🚀 Planning infrastructure deployment..."
        terraform plan -out=tfplan
        
        echo "🏗️ Applying infrastructure changes..."
        terraform apply tfplan
        
        echo "📋 Deployment summary:"
        terraform output
        
    - name: Get API Gateway URL and build React app
      run: |
        cd infrastructure
        API_ID=$(terraform output -raw api_gateway_url | cut -d'/' -f3 | cut -d'.' -f1)
        cd ..
        cat > .env.production << EOF
        REACT_APP_API_URL=https://${API_ID}.execute-api.us-east-1.amazonaws.com/prod
        REACT_APP_USER_POOL_ID=us-east-1_adCNyuj1g
        REACT_APP_CLIENT_ID=6jco9g2vmm2nfqkb5rcsmtq3gt
        REACT_APP_CLIENT_SECRET=8qc2jck6rt6lidd048noggddnlb4j2ebmhsb7pm09r72tval2pm
        REACT_APP_REGION=us-east-1
        EOF
        npm run build
        
    - name: Upload to S3 and validate
      run: |
        cd infrastructure
        BUCKET_NAME=$(terraform output -raw admin_panel_bucket_name)
        echo "📦 Uploading React build to S3: $BUCKET_NAME"
        aws s3 sync ../build/ s3://${BUCKET_NAME}/ --delete
        
        echo "🔍 Validating deployment..."
        # Verify Lambda function exists
        aws lambda get-function --function-name admin-panel-api --region us-east-1 > /dev/null && echo "✅ Lambda function deployed" || echo "❌ Lambda function missing"
        
        # Verify API Gateway exists
        API_COUNT=$(aws apigateway get-rest-apis --query "length(items[?name=='admin-panel-api'])" --region us-east-1)
        if [ "$API_COUNT" -gt 0 ]; then
          echo "✅ API Gateway deployed"
        else
          echo "❌ API Gateway missing"
        fi
        
        # Verify DynamoDB table exists
        aws dynamodb describe-table --table-name admin-credentials --region us-east-1 > /dev/null && echo "✅ DynamoDB table deployed" || echo "❌ DynamoDB table missing"
        
        # Verify S3 bucket has content
        OBJECT_COUNT=$(aws s3 ls s3://$BUCKET_NAME --recursive | wc -l)
        echo "✅ S3 bucket contains $OBJECT_COUNT files"
        
    - name: Deployment summary
      run: |
        cd infrastructure
        echo "🚀 DEPLOYMENT COMPLETE!"
        echo "================================"
        echo "📋 Infrastructure Summary:"
        terraform output
        echo "================================"
        echo "📍 S3 Website URL: $(terraform output -raw admin_panel_website_url 2>/dev/null || echo 'Not available')"
        echo "🔗 API Gateway URL: $(terraform output -raw api_gateway_url 2>/dev/null || echo 'Not available')"
        echo "🔒 Access Method: VPC-only (requires VPC connection)"
        echo "📊 Bucket Name: $(terraform output -raw admin_panel_bucket_name 2>/dev/null || echo 'Not available')"
        echo "================================"
        echo "✅ All resources deployed successfully!"