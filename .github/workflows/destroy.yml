name: Destroy Admin Panel Infrastructure

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Type "DESTROY" to confirm deletion of all resources'
        required: true
        type: string

jobs:
  destroy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Validate confirmation
      run: |
        if [ "${{ github.event.inputs.confirm_destroy }}" != "DESTROY" ]; then
          echo "❌ Confirmation failed. You must type 'DESTROY' to proceed."
          exit 1
        fi
        echo "✅ Confirmation validated. Proceeding with destruction..."
        
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.5.0'
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Import existing resources and destroy
      run: |
        cd infrastructure
        terraform init
        
        # Try to import existing resources based on terraform.tfvars
        echo "🔍 Checking for existing resources..."
        
        # Empty S3 bucket first
        BUCKET_NAME="cognito-admin-panel-vpc-private"
        echo "🗑️ Emptying S3 bucket: $BUCKET_NAME"
        aws s3 rm s3://$BUCKET_NAME --recursive 2>/dev/null || echo "Bucket already empty or doesn't exist"
        
        # Try to refresh state and destroy
        echo "🚨 DESTROYING ALL INFRASTRUCTURE..."
        terraform refresh -auto-approve || echo "No existing state found"
        terraform destroy -auto-approve || echo "Nothing to destroy or resources already deleted"
        
        # Manual cleanup of remaining resources
        echo "🧹 Manual cleanup of any remaining resources..."
        
        # Delete Lambda function
        aws lambda delete-function --function-name admin-panel-api 2>/dev/null || echo "Lambda function not found"
        
        # Delete API Gateway
        API_ID=$(aws apigateway get-rest-apis --query "items[?name=='admin-panel-api'].id" --output text 2>/dev/null)
        if [ "$API_ID" != "" ] && [ "$API_ID" != "None" ]; then
          echo "Deleting API Gateway: $API_ID"
          aws apigateway delete-rest-api --rest-api-id $API_ID
        fi
        
        # Delete S3 bucket
        aws s3 rb s3://$BUCKET_NAME --force 2>/dev/null || echo "S3 bucket not found"
        
        # Delete DynamoDB table
        aws dynamodb delete-table --table-name admin-credentials 2>/dev/null || echo "DynamoDB table not found"
        
        echo "✅ Manual cleanup completed"
        
    - name: Cleanup confirmation
      run: |
        echo "💥 DESTRUCTION COMPLETE!"
        echo "🗑️ All AWS resources have been deleted"
        echo "💰 No more charges will be incurred"
        echo "⚠️ This action cannot be undone"