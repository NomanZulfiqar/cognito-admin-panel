name: Destroy Admin Panel Infrastructure

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Type "DESTROY" to confirm deletion of all resources'
        required: true
        type: string

jobs:
  destroy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Validate confirmation
      run: |
        if [ "${{ github.event.inputs.confirm_destroy }}" != "DESTROY" ]; then
          echo "‚ùå Confirmation failed. You must type 'DESTROY' to proceed."
          exit 1
        fi
        echo "‚úÖ Confirmation validated. Proceeding with destruction..."
        
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.5.0'
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Destroy infrastructure
      run: |
        cd infrastructure
        terraform init -backend-config="bucket=noman-rocket-zulfiqar-terraform-backend-us-east-1" \
                       -backend-config="key=cognito-admin-panel/terraform.tfstate" \
                       -backend-config="region=us-east-1" \
                       -backend-config="dynamodb_table=noman-rocket-zulfiqar-terraform-backend-us-east-1.lock" \
                       -backend-config="encrypt=true"
        
        echo "üîç Pre-cleanup: Emptying S3 bucket..."
        BUCKET_NAME="cognito-admin-panel-vpc-private"
        aws s3 rm s3://$BUCKET_NAME --recursive 2>/dev/null || echo "Bucket already empty or doesn't exist"
        
        echo "üö® DESTROYING TERRAFORM INFRASTRUCTURE..."
        terraform destroy -auto-approve || echo "Terraform destroy completed with warnings"
        
        echo "üßπ Post-cleanup: Removing any remaining resources..."
        VPC_ID="vpc-0f1991d5da5940d21"
        
        # Clean up Lambda functions
        aws lambda delete-function --function-name admin-panel-api 2>/dev/null || echo "Lambda function already deleted"
        
        # Clean up API Gateways
        API_IDS=$(aws apigateway get-rest-apis --query "items[?name=='admin-panel-api'].id" --output text 2>/dev/null)
        for API_ID in $API_IDS; do
          if [ "$API_ID" != "" ] && [ "$API_ID" != "None" ]; then
            echo "Deleting API Gateway: $API_ID"
            aws apigateway delete-rest-api --rest-api-id $API_ID 2>/dev/null || echo "Failed to delete API Gateway $API_ID"
          fi
        done
        
        # Clean up VPC endpoints
        VPC_ENDPOINTS=$(aws ec2 describe-vpc-endpoints --filters "Name=vpc-id,Values=$VPC_ID" "Name=service-name,Values=com.amazonaws.us-east-1.s3,com.amazonaws.us-east-1.execute-api" --query "VpcEndpoints[].VpcEndpointId" --output text 2>/dev/null)
        if [ "$VPC_ENDPOINTS" != "" ]; then
          echo "Deleting VPC endpoints: $VPC_ENDPOINTS"
          aws ec2 delete-vpc-endpoints --vpc-endpoint-ids $VPC_ENDPOINTS 2>/dev/null || echo "VPC endpoints already deleted"
          echo "Waiting for VPC endpoints to delete..."
          sleep 30
        fi
        
        # Clean up IAM roles and policies
        aws iam delete-role-policy --role-name admin-panel-lambda-role --policy-name admin-panel-lambda-policy 2>/dev/null || echo "IAM policy already deleted"
        aws iam delete-role --role-name admin-panel-lambda-role 2>/dev/null || echo "IAM role already deleted"
        
        # Clean up security groups
        SG_IDS=$(aws ec2 describe-security-groups --filters "Name=group-name,Values=admin-panel*" --query "SecurityGroups[].GroupId" --output text 2>/dev/null)
        for SG_ID in $SG_IDS; do
          if [ "$SG_ID" != "" ]; then
            echo "Deleting security group: $SG_ID"
            aws ec2 delete-security-group --group-id $SG_ID 2>/dev/null || echo "Security group $SG_ID already deleted or has dependencies"
          fi
        done
        
        # Clean up S3 bucket
        aws s3 rb s3://$BUCKET_NAME --force 2>/dev/null || echo "S3 bucket already deleted"
        
        # Clean up DynamoDB table
        aws dynamodb delete-table --table-name admin-credentials 2>/dev/null || echo "DynamoDB table already deleted"
        
        echo "‚úÖ Cleanup completed"
        
    - name: Verify destruction
      run: |
        echo "üîç Verifying all resources are deleted..."
        
        # Check Lambda functions
        LAMBDA_COUNT=$(aws lambda list-functions --query "length(Functions[?contains(FunctionName, 'admin-panel')])" --region us-east-1)
        echo "Lambda functions remaining: $LAMBDA_COUNT"
        
        # Check API Gateways
        API_COUNT=$(aws apigateway get-rest-apis --query "length(items[?name=='admin-panel-api'])" --region us-east-1)
        echo "API Gateways remaining: $API_COUNT"
        
        # Check S3 buckets
        BUCKET_EXISTS=$(aws s3 ls s3://cognito-admin-panel-vpc-private 2>/dev/null && echo "1" || echo "0")
        echo "S3 bucket exists: $BUCKET_EXISTS"
        
        # Check DynamoDB tables
        TABLE_EXISTS=$(aws dynamodb describe-table --table-name admin-credentials --region us-east-1 2>/dev/null && echo "1" || echo "0")
        echo "DynamoDB table exists: $TABLE_EXISTS"
        
        # Check IAM roles
        ROLE_COUNT=$(aws iam list-roles --query "length(Roles[?contains(RoleName, 'admin-panel')])" --region us-east-1)
        echo "IAM roles remaining: $ROLE_COUNT"
        
        # Check security groups
        SG_COUNT=$(aws ec2 describe-security-groups --filters "Name=group-name,Values=admin-panel*" --query "length(SecurityGroups)" --region us-east-1)
        echo "Security groups remaining: $SG_COUNT"
        
        echo "================================"
        echo "üí• DESTRUCTION COMPLETE!"
        echo "üóëÔ∏è All AWS resources have been deleted"
        echo "üí∞ No more charges will be incurred"
        echo "‚ö†Ô∏è This action cannot be undone"
        echo "================================"